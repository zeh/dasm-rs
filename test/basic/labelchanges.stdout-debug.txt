Debug trace ON
char '0'
stackarg 0 (@0)
0MEMORYADDR0 ; labelchanges.asm - test various cases of labels changing location in 

0MEMORYADDR0 ; successive passes. Test code provided by Thomas Jentzsch.

0MEMORYADDR0 

0MEMORYADDR0     processor 6502

0MEMORYADDR0 

0MEMORYADDR0 ;===============================================================================

0MEMORYADDR0 

0MEMORYADDR0   ; automatically decide whether to use a branch or a jump

0MEMORYADDR0   MAC BNEJ

0MEMORYADDR0     IF ({1} - .) >= -126 && ({1} - .) <= 129

0MEMORYADDR0       bne    {1}

0MEMORYADDR0     ELSE

0MEMORYADDR0       beq    skip$

0MEMORYADDR0       jmp    {1}

0MEMORYADDR0 skip$

0MEMORYADDR0     ENDIF

0MEMORYADDR0   ENDM

0MEMORYADDR0 

0MEMORYADDR0 ;===============================================================================

0MEMORYADDR0 

0MEMORYADDR0     ORG     $1000

char '$'
stackarg 4096 (@0)
0MEMORYADDR0 

0MEMORYADDR0 BackOk

0MEMORYADDR0     ds      126, $ea

char '1'
stackarg 126 (@0)
char ','
char ' '
char '$'
stackarg 234 (@0)
0MEMORYADDR0     BNEJ    BackOk

thread 'main' panicked at 'index out of bounds: the len is 4 but the index is 6', src/macros/operations.rs:0000:0
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.
